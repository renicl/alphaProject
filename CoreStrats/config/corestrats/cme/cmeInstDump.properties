# PROPERTIES
# CME Instrument Dump
# subscribe to all channels in the CME config.xml and dump all instruments to log file

app.name=CME_InstDump
app.debug=false
app.genIdPrefix=C
app.genNumIdPrefix=12
app.REC=2

admin.port=8300

# expectedOrders is used to presize pools and calculate size of persistence files page sizes
run.cpuMaskFile=${ALGO_CPU_MASKS}
run.warmUpCount=${WARMCOUNT}
run.forceRemovePersistence=false
run.maxLogSize=1000000000
run.warmUpPortOffset=20
run.minLogFlushSecs=${LOG_FLUSH_SECS}
run.mainPriority=Main

warmup.delay=${WARMDELAY}


# =================================================================================
# DEFAULT PROPERTIES

queue.default.enableSendSpinLock=${run.enableSendSpinLock}

queue.mdIn.default.defaultProperties=queue.default
queue.mdIn.default.type=${MD_IN_QUEUE_TYPE}
queue.mdIn.default.queuePresize=${MD_IN_RING_BUFFER_DEFAULT_QUEUE_SIZE}


# SESSION INSTANCE CONFIG
# session type FIX, MultiFIX, SocketSession, UTP
session.default.type=FIX
session.default.disableNanoStats=false
session.default.logEvents=true
session.default.logStats=true
session.default.logPojoEvents=${run.logPojoEvents}
session.default.useNIO=${run.useNIO}
session.default.persistThreadPriority=MemMapAllocator
session.default.dummyPersister=true
session.default.disableNanoStats=false
session.default.enableReceiverSpinLock=${run.enableReceiverSpinLock}
session.default.enableSendSpinLock=${run.enableSendSpinLock}
session.default.persistThreadPriority=MemMapAllocator
session.default.trace=${run.sessionTrace}

session.up.default.defaultProperties=session.default

session.down.default.defaultProperties=session.default

# SESSION SOCKET INSTANCE CONFIG
# session type FIX, MultiFIX, SocketSession, UTP
session.socket.default.localPort=0
session.socket.default.soDelayMS=0
session.socket.default.useNIO=${run.useNIO}

session.socket.up.default.defaultProperties=session.socket.default
session.socket.up.default.server=false

session.socket.down.default.codecId=Standard44
session.socket.down.default.defaultProperties=session.socket.default
session.socket.down.default.server=false
session.socket.down.default.isRecoverFromLoginSeqNumTooLow=true
session.socket.down.default.heartBeatIntSecs=${EXCHANGE_HEARTBEAT_SECS}


# =================================================================================
# COMPONENTS

component.appProps.loader=com.rr.om.loaders.OMPropertiesLoader

component.exchangeManager.loader=com.rr.om.loaders.ExchangeManagerLoader
component.exchangeManager.properties.genNumIdPrefix=${app.genNumIdPrefix}
component.exchangeManager.properties.fileName=${run.exchangeXML}

component.instrumentLocator.loader=com.rr.om.loaders.FixInstrumentFileStoreLoader
component.instrumentLocator.properties.file=${inst.file}
component.instrumentLocator.properties.threadsafe=false
component.instrumentLocator.properties.rec=${app.REC}
component.instrumentLocator.properties.type=singleExchange

component.sessionManager.className=com.rr.om.session.SessionManager

component.cmeConfig.loader=com.rr.md.us.cme.XMLCMEConfigLoader
component.cmeConfig.properties.configFile=./data/corestrats/cme/config.xml

component.codecFactory.loader=com.rr.om.loaders.CodecFactoryLoader


# ---------------------------------------------------------------------------------

######################
# MD SESSION THREADS #
######################
 
# INBOUND (Market Data .. so no outbound dispatcher)
component.threadMktData1.className=com.rr.core.thread.SingleElementControlThread
component.threadMktData1.arg.1.type=com.rr.core.utils.ThreadPriority 
component.threadMktData1.arg.1.value=DataIn1

component.mktDataReceiver1.className=com.rr.core.session.MultiSessionThreadedReceiver
component.mktDataReceiver1.arg.1.type=com.rr.core.thread.ControlThread 
component.mktDataReceiver1.arg.1.value=threadMktData1
component.mktDataReceiver1.arg.2.value=P1

######################
# MD SESSION BUILDER #
######################

component.baseMDSocketConfig.className=com.rr.md.fastfix.FastSocketConfig
component.baseMDSocketConfig.properties.defaultProperties=session.socket.up.default
component.baseMDSocketConfig.properties.recycler=com.rr.model.generated.internal.events.factory.EventRecycler
component.baseMDSocketConfig.properties.localPort=0


###################
# MD Controller 1 #
###################

# MarketDataController 
# market data events placed in market data controller queue
# queue is read and events invoked on the market data controller by its inbound dispatcher (which will be async on its own thread)
component.mdCtlInQueue1.loader=com.rr.om.loaders.QueueLoader
component.mdCtlInQueue1.properties.defaultProperties=queue.mdIn.default

component.mdInDispatcher1.className=com.rr.core.dispatch.ThreadedDispatcher
component.mdInDispatcher1.arg.1.type=com.rr.core.collections.MessageQueue
component.mdInDispatcher1.arg.1.value=mdCtlInQueue1
component.mdInDispatcher1.arg.2.type=com.rr.core.utils.ThreadPriority
component.mdInDispatcher1.arg.2.value=Controller1

component.bookLogger.className=com.rr.core.algo.mdadapters.DebugBookChangeConsumer

component.mdController1.loader=com.rr.core.algo.loaders.CMEMarketDataControllerLoader
component.mdController1.properties.pipeIdList=P1
component.mdController1.properties.bookLevels=5
component.mdController1.properties.inboundDispatcher=mdInDispatcher1
component.mdController1.properties.instrumentStore=instrumentLocator
component.mdController1.properties.rec=${app.REC}
component.mdController1.properties.bookListener=bookLogger
component.mdController1.properties.overrideSubscribeSet=true
# TO FILTER EVENTS BY subscriptionFile use :-
#component.mdController1.properties.overrideSubscribeSet=false
#component.mdController1.properties.subscriptionFile=config/corestrats/cme/cme.subs.txt

component.mdSessBuilder.className=com.rr.md.us.cme.builder.CMERoundRobinSessionBuilder
component.mdSessBuilder.arg.1.ref=cmeConfig
component.mdSessBuilder.arg.2.value=ALL
component.mdSessBuilder.arg.3.ref=sessionManager
component.mdSessBuilder.arg.4.type=[Lcom.rr.core.model.MessageHandler;
component.mdSessBuilder.arg.4.value=mdController1
component.mdSessBuilder.arg.5.type=[Lcom.rr.core.session.MultiSessionThreadedReceiver;
component.mdSessBuilder.arg.5.value=mktDataReceiver1
component.mdSessBuilder.arg.6.type=com.rr.core.session.socket.SocketConfig
component.mdSessBuilder.arg.6.ref=baseMDSocketConfig
component.mdSessBuilder.arg.7.value=${OM_MD_NIC_A}
component.mdSessBuilder.properties.addInstrumentSessions=true
component.mdSessBuilder.properties.addSnapshotSessions=true
component.mdSessBuilder.properties.addIncrementalSessions=true
component.mdSessBuilder.properties.trace=true
component.mdSessBuilder.properties.enableEventPojoLogging=true
component.mdSessBuilder.properties.subChannelMask=-1
component.mdSessBuilder.properties.templateFile=data/corestrats/cme/templates.xml


# ---------------------------------------------------------------------------------
# SHARED CONTEXT
# Last component due to reference requirements
component.appContext.className=com.rr.core.algo.strats.StratContext
component.appContext.properties.appProps=appProps
component.appContext.properties.exchangeManager=exchangeManager
component.appContext.properties.instrumentLocator=instrumentLocator



